En SQL, tanto JOIN como UNION se utilizan para combinar datos de varias tablas, pero funcionan de manera diferente:

Diferencia entre JOIN y UNION:
JOIN: Se usa para combinar filas de dos o más tablas en función de una condición de relación (como una clave primaria o una clave foranea).
Los JOIN pueden combinar varias columnas de ambas tablas.
Tipos de JOIN: INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN.

UNION: Se usa para combinar los resultados de dos o más consultas SELECT.
La diferencia clave es que UNION apila los resultados de manera vertical (es decir, las filas se apilan una encima de otra), no horizontalmente.

Ejemplo de JOIN 

Tabla Clientes
ClienteID	                   Nombre
1	                           Ana
2	                           Luis
3	                           Marta

Tabla Pedidos
PedidoID	                   ClienteID	                Producto
101	                         1	                        Laptop
102	                         2	                        Teléfono
103	                         1	                        Teclado

Si queremos obtener una lista de clientes con sus pedidos, usamos un JOIN:

SELECT Clientes.Nombre, Pedidos.Producto
FROM Clientes
INNER JOIN Pedidos ON Clientes.ClienteID = Pedidos.ClienteID;

Resultado:
Nombre	                Producto
Ana	                    Laptop
Ana	                    Teclado
Luis	                  Teléfono



2. Explique qué es una consulta CTE (Common Table Expression) y mencione un caso
de uso.
Una CTE (Common Table Expression) es una consulta temporal en SQL
que se define utilizando la cláusula WITH. Sirve para mejorar la legibilidad
y organización del código, especialmente cuando se necesitan subconsultas

Caso de Uso: Encontrar empleados con salario superior al promedio, aqui podemos utilizar
la consulta temporal, que nos ayudara a sacar el salario promedio y luego realizar
la comparacion con el salario individal.
WITH SalarioPromedio AS (
    SELECT AVG(Salario) AS Promedio FROM Empleados
)
SELECT Nombre, Salario
FROM Empleados
WHERE Salario > (SELECT Promedio FROM SalarioPromedio);

3. ¿Qué es la cláusula HAVING en SQL y en qué se diferencia de WHERE?
La cláusula HAVING en SQL se usa para filtrar resultados después de aplicar
funciones de agregación (SUM(), AVG(). Se diferencia de WHERE, que filtra registros antes de la agregación.

4. Dado el siguiente conjunto de datos en una tabla llamada ventas,escriba una
consulta SQL para obtener el total de ventas por cliente, incluyendo sólo aquellos
con un monto total superior a 250.:
id_venta             fecha             cliente_id             monto
1                    2025-03-01        101                    200
2                    2025-03-02        102                    150
3                    2025-03-02        101                    300

SELECT cliente_id, SUM(monto) AS total_ventas
FROM ventas
GROUP BY cliente_id
HAVING SUM(monto) > 250;

----------------------------------------------------------------------------------------------------

Python

1. ¿Cuál es la diferencia entre una lista y un diccionario en Python? Dé un ejemplo de
cada uno.
Característica	                        Lista (list)	                                    Diccionario (dict)
Definición	                            Colección ordenada de elementos	                    Colección de pares clave-valor
Acceso a elementos	                    Por índice numérico (posición)	                    Por clave
Ejemplo de acceso	                    mi_lista[0]	                                        mi_diccionario["nombre"]
Tipos de datos permitidos	            Cualquier tipo de dato	                            Claves deben ser inmutables


2. ¿Qué librerías en Python se utilizan comúnmente para análisis de datos? Mencione
al menos tres.
Las librerias mas utilizadas para el analisis de datos es 
 - Pandas 🐼
 - NumPy
 - Matplotlib 📊


3. ¿Qué salida generará el siguiente código en Python?
data = [5, 3, 9, 1]
print(sorted(data)[-2])

En la primera linea crea una lista con los datos  5, 3, 9, 1
despues ordenada los datos de menor a mayor
y por ultimo impreme la penultima posicion
es decir al momento de imprimir el resultado es el numero 5

-------------------------------------------------------------------------------------------------------------------------

Tableau

1. ¿Cuál es la diferencia entre una medida y una dimensión en Tableau?

Dimensión	                                                                           Medida
Datos categóricos que describen o agrupan información.	                               Datos numéricos que pueden ser calculados o agregados.
Nombre, Fecha, Ciudad.	                                                               Ventas, Precio, Cantidad, Promedio.
Se utilizan para segmentar, clasificar o agrupar datos.	                               Se utilizan en cálculos y agregaciones como SUM, AVG, COUNT.
Texto, fechas, categorías.	                                                           Números continuos.

2. ¿Qué tipo de gráfico es más adecuado para comparar porcentajes de una variable
categórica?
1️⃣ Gráfico de Barras 📊
✔ Se usa cuando queremos comparar proporciones entre categorías.
✔ Muestra los valores de manera clara y precisa.

3. ¿Cómo se puede crear un filtro dinámico en Tableau para que el usuario pueda
seleccionar un rango de fechas?
Primeramente hay que agregar un campo de fecha a la vista
Aplicar un rango de fechas
Mostrar el filtro en la vista
Personalizar el filtro dinamico

4. ¿Que es un archivo hyper en tableau, y en que caso de uso se puede aplicar?
Un archivo .hyper en Tableau es un formato de base de datos optimizado para almacenar, 
procesar y analizar grandes volúmenes de datos de manera eficiente.
Los archivos .hyper son extractos de datos que se pueden usar sin conexión y permiten
una consulta más rápida que una conexión en vivo a una base de datos.
